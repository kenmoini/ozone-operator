---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: remotesubscriptions.config.operator.o3
spec:
  group: config.operator.o3
  names:
    kind: RemoteSubscription
    listKind: RemoteSubscriptionList
    plural: remotesubscriptions
    singular: remotesubscription
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RemoteSubscription is the Schema for the remotesubscriptions
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RemoteSubscriptionSpec defines the desired state of RemoteSubscription
            properties:
              operator:
                description: Operator defines the local operator to be deployed to
                  the remote cluster
                properties:
                  channel:
                    description: Channel is the name of the operator channel - if
                      this is not specified, the Operator default channel will be
                      used
                    type: string
                  installMode:
                    description: InstallMode is the install mode for the operator,
                      options include `all-namespaces`, `namespace` - if this is not
                      specified, the Operator's default Installation Mode will be
                      used.
                    type: string
                  installPlanApproval:
                    description: InstallPlanApproval is the approval strategy for
                      the operator install plan
                    type: string
                  packageName:
                    description: PackageName is the name of the operator PackageManifest
                    type: string
                  source:
                    description: Source is the name of the CatalogSource that contains
                      the operator
                    type: string
                  sourceNamespace:
                    description: SourceNamespace is the namespace of the CatalogSource
                      that contains the operator
                    type: string
                  startingCSV:
                    description: StartingCSV is the name of the operator CSV to start
                      with - if this is not specified, the latest CSV in the channel
                      will be used
                    type: string
                required:
                - packageName
                - source
                - sourceNamespace
                type: object
              remoteCluster:
                description: RemoteCluster defines the remote cluster and the connection
                  to it
                properties:
                  name:
                    description: Name is the name of the remote cluster as found in
                      RHACM
                    type: string
                  targetNamespace:
                    description: TargetNamespace is the namespace in the remote cluster
                      where the operator will be deployed
                    type: string
                required:
                - name
                - targetNamespace
                type: object
            required:
            - operator
            - remoteCluster
            type: object
          status:
            description: RemoteSubscriptionStatus defines the observed state of RemoteSubscription
            properties:
              conditions:
                description: Conditions is a list of conditions and their status
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              operatorStatus:
                description: OperatorStatus is the status of the operator deployment
                  to the remote cluster
                properties:
                  message:
                    description: Message is a message about the status of the operator
                      deployment
                    type: string
                  status:
                    description: Status is the status of the operator deployment
                    type: string
                required:
                - message
                - status
                type: object
              remoteClusterStatus:
                description: RemoteClusterStatus is the status of the remote cluster
                  and the connection to it
                properties:
                  message:
                    description: Message is a message about the status of the remote
                      cluster
                    type: string
                  status:
                    description: Status is the status of the remote cluster
                    type: string
                required:
                - message
                - status
                type: object
            required:
            - operatorStatus
            - remoteClusterStatus
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
